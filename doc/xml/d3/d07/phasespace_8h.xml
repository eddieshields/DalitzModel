<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="d3/d07/phasespace_8h" kind="file" language="C++">
    <compoundname>phasespace.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includedby refid="d5/db6/amplitude_8h" local="yes">/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/amplitude.h</includedby>
    <includedby refid="d1/daf/dalitzplot_8h" local="yes">/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/dalitzplot.h</includedby>
    <includedby refid="d5/ddb/resonance_8h" local="yes">/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/resonance.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/phasespace.h</label>
        <link refid="d3/d07/phasespace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/dalitzplot.h</label>
        <link refid="d1/daf/dalitzplot_8h"/>
      </node>
      <node id="2">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/amplitude.h</label>
        <link refid="d5/db6/amplitude_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/lineshapes/flatte.h</label>
        <link refid="d8/d8c/flatte_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/lineshapes/relbreitwigner.h</label>
        <link refid="d8/d72/relbreitwigner_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/phasespace.h</label>
        <link refid="d3/d07/phasespace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/resonance.h</label>
        <link refid="d5/ddb/resonance_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/configureamplitude.h</label>
        <link refid="dc/de4/configureamplitude_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d1/d8d/class_dalitz_model_1_1_phase_space" prot="public">DalitzModel::PhaseSpace</innerclass>
    <innernamespace refid="dd/d06/namespace_dalitz_model">DalitzModel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DALITZMODEL_PHASESPACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DALITZMODEL_PHASESPACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dd/d06/namespace_dalitz_model" kindref="compound">DalitzModel</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="d1/d8d/class_dalitz_model_1_1_phase_space" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space" kindref="compound">PhaseSpace</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mMother<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_m1<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_m2<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_m3<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqMother<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq1<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq2<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq3<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqSum<sp/>=<sp/>{0.};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor/Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8e7b17661cad96304174f501285579de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8e7b17661cad96304174f501285579de" kindref="member">PhaseSpace</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6a2d0223a0d03d945b970d924a9b99ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6a2d0223a0d03d945b970d924a9b99ae" kindref="member">PhaseSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acdf42c10df1b710ab18a19616d96ed7d" kindref="member">mMother</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8d987eb01f12885d9ba2408e1e87dfb9" kindref="member">m1</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a88020ed3bf1c01a553be5af625ac2174" kindref="member">m2</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6e174d691cd913d88158ad50e81d8553" kindref="member">m3</ref>):<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mMother(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acdf42c10df1b710ab18a19616d96ed7d" kindref="member">mMother</ref><sp/>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m1(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8d987eb01f12885d9ba2408e1e87dfb9" kindref="member">m1</ref><sp/>),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m2(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a88020ed3bf1c01a553be5af625ac2174" kindref="member">m2</ref><sp/>),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m3(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6e174d691cd913d88158ad50e81d8553" kindref="member">m3</ref><sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqMother<sp/>=<sp/>std::pow(<sp/>m_mMother<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq1<sp/>=<sp/>std::pow(<sp/>m_m1<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq2<sp/>=<sp/>std::pow(<sp/>m_m2<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq3<sp/>=<sp/>std::pow(<sp/>m_m3<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqSum<sp/>=<sp/>std::pow(<sp/>m_mMother<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m1<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m2<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m3<sp/>,<sp/>2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a010fad4f4b612dedc2d48e3d580cc527" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a010fad4f4b612dedc2d48e3d580cc527" kindref="member">PhaseSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space" kindref="compound">PhaseSpace</ref>&amp;<sp/>other)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mMother(<sp/>other.m_mMother<sp/>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m1(<sp/>other.m_m1<sp/>),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m2(<sp/>other.m_m2<sp/>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_m3(<sp/>other.m_m3<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqMother<sp/>=<sp/>std::pow(<sp/>m_mMother<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq1<sp/>=<sp/>std::pow(<sp/>m_m1<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq2<sp/>=<sp/>std::pow(<sp/>m_m2<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSq3<sp/>=<sp/>std::pow(<sp/>m_m3<sp/>,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_mSqSum<sp/>=<sp/>std::pow(<sp/>m_mMother<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m1<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m2<sp/>,<sp/>2<sp/>)<sp/>+<sp/>std::pow(<sp/>m_m3<sp/>,<sp/>2);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af659159d788d8158dab3805a5f6b566d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af659159d788d8158dab3805a5f6b566d" kindref="member">~PhaseSpace</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a47c799901e7afc1e83926d178849cabe" kindref="member">m</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1adbbd91faa0d77d798d0a099cd925e41e" kindref="member">mSq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acdf42c10df1b710ab18a19616d96ed7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acdf42c10df1b710ab18a19616d96ed7d" kindref="member">mMother</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mMother;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8d987eb01f12885d9ba2408e1e87dfb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a8d987eb01f12885d9ba2408e1e87dfb9" kindref="member">m1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m1;<sp/>}</highlight></codeline>
<codeline lineno="61" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a88020ed3bf1c01a553be5af625ac2174" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a88020ed3bf1c01a553be5af625ac2174" kindref="member">m2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m2;<sp/>}</highlight></codeline>
<codeline lineno="62" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6e174d691cd913d88158ad50e81d8553" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a6e174d691cd913d88158ad50e81d8553" kindref="member">m3</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m3;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a4a9ab31f12e1c3a1090cd4299dfc0d2a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a4a9ab31f12e1c3a1090cd4299dfc0d2a" kindref="member">mSqMother</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSqMother;<sp/>}</highlight></codeline>
<codeline lineno="65" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ae8d47d551a3fe19e7b214a40deef2c70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ae8d47d551a3fe19e7b214a40deef2c70" kindref="member">mSq1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq1;<sp/>}</highlight></codeline>
<codeline lineno="66" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1aab07793d3c30708e9f328f8d63b39fa4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1aab07793d3c30708e9f328f8d63b39fa4" kindref="member">mSq2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq2;<sp/>}</highlight></codeline>
<codeline lineno="67" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ae315848ea28eab0074c51518729df55c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ae315848ea28eab0074c51518729df55c" kindref="member">mSq3</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq3;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac82134be0d9af8f4b96300e0929dd1c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac82134be0d9af8f4b96300e0929dd1c9" kindref="member">mSqSum</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSqSum;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1f215288bb0c70b565b455b887aa7f3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1f215288bb0c70b565b455b887aa7f3e" kindref="member">mSq12min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_m1<sp/>+<sp/>m_m2)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="72" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1aeee049c322dbec4a75e539abc835ee6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1aeee049c322dbec4a75e539abc835ee6d" kindref="member">mSq12max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_mMother<sp/>-<sp/>m_m3)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="73" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" kindref="member">mSq13min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_m1<sp/>+<sp/>m_m3)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="74" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" kindref="member">mSq13max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_mMother<sp/>-<sp/>m_m2)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="75" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" kindref="member">mSq23min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_m2<sp/>+<sp/>m_m3)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="76" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" kindref="member">mSq23max</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(<sp/>(m_mMother<sp/>-<sp/>m_m1)<sp/>,<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" kindref="member">mSq13min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" kindref="member">mSq13max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" kindref="member">mSq23min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" kindref="member">mSq23max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af6079df2432d06ff388211f7f6d8f4a1" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq13)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af6079df2432d06ff388211f7f6d8f4a1" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq13,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq23)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>z)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a0d8712c999286c8b2547ee096e4ef215" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space" kindref="compound">PhaseSpace</ref>&amp;<sp/>ps);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a47c799901e7afc1e83926d178849cabe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a47c799901e7afc1e83926d178849cabe" kindref="member">PhaseSpace::m</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mMother;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>2<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m2;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>3<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_m3;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1adbbd91faa0d77d798d0a099cd925e41e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1adbbd91faa0d77d798d0a099cd925e41e" kindref="member">PhaseSpace::mSq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSqMother;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>1<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>2<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq2;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>3<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_mSq3;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a38f3ec9b520736013aa75bea4e22727e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" kindref="member">PhaseSpace::mSq13min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>std::pow(<sp/>m_mSqMother<sp/>+<sp/>m_mSq1<sp/>-<sp/>m_mSq2<sp/>-<sp/>m_mSq3,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSq1<sp/><sp/><sp/><sp/><sp/>,<sp/>m_mSq2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>third<sp/><sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSqMother,<sp/>m_mSq3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>-<sp/>std::pow(<sp/>second<sp/>+<sp/>third,<sp/>2<sp/>)<sp/>)<sp/>/<sp/>(<sp/>4.<sp/>*<sp/>mSq12<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a0cee68c584456ac55087b2798ea24cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" kindref="member">PhaseSpace::mSq13max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="121"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>std::pow(<sp/>m_mSqMother<sp/>+<sp/>m_mSq1<sp/>-<sp/>m_mSq2<sp/>-<sp/>m_mSq3,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSq1<sp/><sp/><sp/><sp/><sp/>,<sp/>m_mSq2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>third<sp/><sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSqMother,<sp/>m_mSq3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>-<sp/>std::pow(<sp/>second<sp/>-<sp/>third,<sp/>2<sp/>)<sp/>)<sp/>/<sp/>(<sp/>4.<sp/>*<sp/>mSq12<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a7130adf407bd04c9737e90ba484e5487" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" kindref="member">PhaseSpace::mSq23min</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>std::pow(<sp/>m_mSqMother<sp/>-<sp/>m_mSq1<sp/>+<sp/>m_mSq2<sp/>-<sp/>m_mSq3,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSq1<sp/><sp/><sp/><sp/><sp/>,<sp/>m_mSq2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>third<sp/><sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSqMother,<sp/>m_mSq3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>-<sp/>std::pow(<sp/>second<sp/>+<sp/>third,<sp/>2<sp/>)<sp/>)<sp/>/<sp/>(<sp/>4.<sp/>*<sp/>mSq12<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a2824f0ca754fdcbd05ffff1f9423392d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" kindref="member">PhaseSpace::mSq23max</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first<sp/><sp/>=<sp/>std::pow(<sp/>m_mSqMother<sp/>-<sp/>m_mSq1<sp/>+<sp/>m_mSq2<sp/>-<sp/>m_mSq3,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSq1<sp/><sp/><sp/><sp/><sp/>,<sp/>m_mSq2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>third<sp/><sp/>=<sp/>std::sqrt(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">kallen</ref>(<sp/>mSq12,<sp/>m_mSqMother,<sp/>m_mSq3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>-<sp/>std::pow(<sp/>second<sp/>-<sp/>third,<sp/>2<sp/>)<sp/>)<sp/>/<sp/>(<sp/>4.<sp/>*<sp/>mSq12<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af6079df2432d06ff388211f7f6d8f4a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af6079df2432d06ff388211f7f6d8f4a1" kindref="member">PhaseSpace::contains</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq13<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq23<sp/>=<sp/>m_mSqSum<sp/>-<sp/>mSq12<sp/>-<sp/>mSq13;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>mSq13<sp/>&gt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" kindref="member">mSq13min</ref>(<sp/>mSq12<sp/>)<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>mSq13<sp/>&lt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" kindref="member">mSq13max</ref>(<sp/>mSq12<sp/>)<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>mSq23<sp/>&gt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" kindref="member">mSq23min</ref>(<sp/>mSq12<sp/>)<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>mSq23<sp/>&lt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" kindref="member">mSq23max</ref>(<sp/>mSq12<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a3ec0357626c594e0e0746749fe8243b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af6079df2432d06ff388211f7f6d8f4a1" kindref="member">PhaseSpace::contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq12,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq13,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>mSq23)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1f215288bb0c70b565b455b887aa7f3e" kindref="member">mSq12min</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>mSq12<sp/>&amp;&amp;<sp/>mSq12<sp/>&lt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1aeee049c322dbec4a75e539abc835ee6d" kindref="member">mSq12max</ref>()<sp/>)<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1af355aa09bb3e7c6c3210bdf50ce8f81f" kindref="member">mSq13min</ref>(mSq12)<sp/>&lt;<sp/>mSq13<sp/>&amp;&amp;<sp/>mSq13<sp/>&lt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1ac3176db232bf594b5bb9f5726f7aeed1" kindref="member">mSq13max</ref>(mSq12)<sp/>)<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1abeece83a7eb80d43cbc74d1232b6af8e" kindref="member">mSq23min</ref>(mSq12)<sp/>&lt;<sp/>mSq23<sp/>&amp;&amp;<sp/>mSq23<sp/>&lt;<sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1a1abc5665486d777916c34b9937147c8c" kindref="member">mSq23max</ref>(mSq12)<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space_1acb312884c720561f9fc5837a6474dc06" kindref="member">PhaseSpace::kallen</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>z<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>std::pow(<sp/>x,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>std::pow(<sp/>y,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>std::pow(<sp/>z,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>2.<sp/>*<sp/>x<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>2.<sp/>*<sp/>x<sp/>*<sp/>z;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>result<sp/>-=<sp/>2.<sp/>*<sp/>y<sp/>*<sp/>z;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I/O<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="dd/d06/namespace_dalitz_model_1a60068eab88b5044feaa0a6fb9def6c6e" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="dd/d06/namespace_dalitz_model_1a70d829ee01855e911a46fc8048feaa8c" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d8d/class_dalitz_model_1_1_phase_space" kindref="compound">PhaseSpace</ref>&amp;<sp/>ps)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mMother<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ps.m_mMother<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ps.m_m1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ps.m_m2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;m3<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ps.m_m3;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>DalitzModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/eddieshields/Documents/LHCb/projects/DalitzModel/include/phasespace.h"/>
  </compounddef>
</doxygen>
